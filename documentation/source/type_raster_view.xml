<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//XMLmind//DTD BoostBook//EN"
"http://www.boost.org/tools/boostbook/dtd/boostbook.dtd">
<section>
	<title><replaceable>raster_view</replaceable></title>

	<section><title>Description</title>

		<para>The raster_view typedef is the mechanism of selecting a specific view of a raster. The underlying raster_view_lookup struct is used as a customization point to define a raster views.</para>
	</section>

	<section><title>Example of use</title>

		<para>The example opens a gdal_raster and subsequently creates a view that iterates over its pixels in column-by-column</para>

		<programlisting>
auto raster = blink::raster::open_gdal_raster&lt;int&gt;("input.tif", GAReadOnly);
using orientation = raster::orientation::col_major;
using element = raster::element::pixel;
using access = raster::access::read_only;
auto view = blink::raster_view&lt;orientation, element, access, gdal_raster&lt;int&gt; &gt;{&amp;raster};

int sum = 0;
for(auto&amp;&amp; i : view){
  sum += i;
}
int count = view.size1() * view.size2();
double mean = static_cast&lt;double&gt;(sum) / count;
		</programlisting>
	</section>

	<section><title>Definition</title>

		<para>&lt;moving_window/raster_view.h&gt;</para>
	</section>

	<section><title>Model of</title>

		<para>Range: a view is a range, in the sense that it has the be</para>
	</section>

	<section><title>Type requirements</title>

		<para><code>Orientation</code> must be on of the following:</para>
		<itemizedlist>
			<listitem>
				<para>
					<code>blink::orientation::row_major</code>
				</para>
			</listitem>
			<listitem>
				<para>
					<code>blink::orientation::col_major</code>
				</para>
			</listitem>
		</itemizedlist>	
		<para><code>Element</code> must be on of the following:</para>
		<itemizedlist>
			<listitem>
				<para>
					<code>blink::orientation::pixel</code>
				</para>
			</listitem>
			<listitem>
				<para>
					<code>blink::orientation::h_edge</code> (horizontal edge)
				</para>
			</listitem>
			<listitem>
				<para>
					<code>blink::orientation::v_edge</code>  (vertical edge)
				</para>
			</listitem>
			<listitem>
				<para>
					<code>blink::orientation::h1_edge</code> (deprecated: top pixel along a horizontal edge)
				</para>
			</listitem>
			<listitem>
				<para>
					<code>blink::orientation::v1_edge</code>  (deprecated: left pixel along a vertical edge)
				</para>
			</listitem>
			<listitem>
				<para>
					<code>blink::orientation::h2_edge</code> (deprecated: bottom pixel along a horizontal edge)
				</para>
			</listitem>
			<listitem>
				<para>
					<code>blink::orientation::v2_edge</code>  (deprecated: right pixel along a vertical edge)
				</para>
			</listitem>
		</itemizedlist>	
		<para><code>Access</code> must be on of the following:</para>
		<itemizedlist>
			<listitem>
				<para>
					<code>blink::access::read_only</code>
				</para>
			</listitem>
			<listitem>
				<para>
					<code>blink::access::read_write</code> 
				</para>
			</listitem>
		</itemizedlist>	
		<para><code>Raster</code> the requested view for the Raster type must be specified in blink::raster::raster_view_lookup&lt;Orientation, Element, Access&gt;::type.</para>
	</section>

	<section><title>Members</title>

		<para>
			<table>
				<title>Member types of raster_view</title>
				<tgroup cols="2">
					<thead>
						<row>
							<entry align="center">type</entry>

							<entry align="center">usage</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry><para><code>iterator</code></para></entry>

							<entry>the iterator type for the view</entry>
						</row>
						<row>
							<entry><para><code>const_iterator</code></para></entry>

							<entry>the const_iterator type for the view</entry>
						</row>
						<row>
							<entry><para><code>coordinate_type</code></para></entry>

							<entry>the coordinate_type of the underlying raster</entry>
						</row>
						<row>
							<entry><para><code>index_type</code></para></entry>

							<entry>the index_type of the underlying raster</entry>
						</row>
						<row>
							<entry><para><code>value_type</code></para></entry>

							<entry>the value_type of the associated iterator</entry>
						</row>

					</tbody>
				</tgroup>
			</table>
		</para>
		<para>
			<table>
				<title>Member functions of raster_view</title>

				<tgroup cols="2">
					<thead>
						<row>
							<entry align="center">member function</entry>

							<entry align="center">usage</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry><para><code>raster_view()</code></para></entry>
							<entry>default constructor, constructs a valid but useless view. Cannot call member functions of this view</entry>
						</row>
						<row>
							<entry><para><code>raster_view(Raster* r</code></para></entry>
							<entry>constructs the view of raster r.</entry>
						</row>
						<row>
							<entry><para><code>iterator begin() const </code></para></entry>
							<entry>returns the iterator that starts the range of this view.</entry>
						</row>
						<row>
							<entry><para><code>iterator end() const</code></para></entry>
							<entry>returns the iterator that ends the range of this view.</entry>
						</row>
						<row>
							<entry><para><code>const_iterator cbegin() const</code></para></entry>
							<entry>returns the const_iterator that starts the range of this view.</entry>
						</row>
						<row>
							<entry><para><code>iterator cend()</code></para></entry>
							<entry>returns the const_iterator that ends the range of this view.</entry>
						</row>
						<row>
							<entry><para><code>index size1() const</code></para></entry>
							<entry>returns the number or elements in the the major iteration direction(note: this is not necessarily identical to the the number of rows in the raster)</entry>
						</row>
						<row>
							<entry><para><code>index size2() const</code></para></entry>
							<entry>returns the number or elements in the the major iteration direction(note: this is not necessarily identical to the the number of columns in the raster)</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
		</para>
	</section>
	<section>   <title>Things that will change</title>
		<para>The Access template parameter is candidate to be deprecated, as there is already the option to make the Raster template parameter a const raster type</para>
		<para>The h1_edge, h2_edge, v1_edge and v2_edge element types seem a bit pointless and are deprecated</para>
		<para>Should still add free convenience functions make_pixel_view(), make_edge_view(), make_pixel_view_transposed(), make_edge_view_transposed();</para>
	</section>
</section>